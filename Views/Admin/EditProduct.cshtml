@model Dia_Supermarket.Models.tb_Products
@{
    ViewBag.Title = "Edit Product";
    Layout = "~/Views/Shared/Admin/_LayoutBasic_Admin.cshtml";
}

@if (@TempData["success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>@TempData["success"]</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

}

@if (@TempData["error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>@TempData["error"]</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

}
<!-- Default Basic Forms Start -->
<div class="pd-20 card-box mb-30">
    <div class="clearfix">
        <div class="pull-left">
            <h4 class="text-blue h4 mb-30">Edit Product</h4>
        </div>
        <div class="pull-right">
            <a href="@Url.Action("ProductsList", "Admin")" class="btn btn-primary btn-sm scroll-click"><span class="icon-copy ion-ios-pricetag"></span> &nbsp;ALL PRODUCTS</a>
        </div>
    </div>

    @using (Html.BeginForm("EditProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.product_id)
        @Html.HiddenFor(model => model.inserted_at)

        <div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label">Product Name</label>
            <div class="col-sm-12 col-md-10">
                @Html.ValidationMessageFor(model => model.product_name, "", new { @class = "text-danger small font-weight-bold" })
                @Html.EditorFor(model => model.product_name, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control",
                        placeholder = "Product Name"
                    }
                })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label">SKU Code</label>
            <div class="col-sm-12 col-md-10">
                @Html.ValidationMessageFor(model => model.sku, "", new { @class = "text-danger small font-weight-bold" })
                @Html.EditorFor(model => model.sku, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control",
                        placeholder = "SKU Code"
                    }
                })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label">Category</label>
            <div class="col-sm-12 col-md-10">
                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger small font-weight-bold" })
                @Html.DropDownListFor(model => model.category_id, ViewBag.CategoriesList as SelectList, "Product Category", new { @class = "custom-select col-12" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label">Price</label>
            <div class="col-sm-12 col-md-10">
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger small font-weight-bold" })
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text text-white" style="background-color: #4cbb17">$</span>
                    </div>
                    @Html.EditorFor(model => model.price, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            placeholder = "Price",
                            value = "0",
                            type = "number"
                        }
                    })
                    <div class="input-group-append">
                        <span class="input-group-text text-white" style="background-color: #4cbb17">.00</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label">Stock</label>
            <div class="col-sm-12 col-md-10">
                @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger small font-weight-bold" })
                <div class="input-group mb-3">
                    @Html.EditorFor(model => model.stock, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            placeholder = "Stock",
                            type = "number",
                            value = "0"
                        }
                    })
                    <div class="input-group-append">
                        <span class="input-group-text text-white" id="basic-addon2" style="background-color: #4cbb17">Units</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label">Upload Image</label>
            <div class="col-sm-12 col-md-8">
                @Html.ValidationMessageFor(model => model.product_image, "", new { @class = "text-danger small font-weight-bold" })
                <div class="custom-file">
                    <input type="file" class="custom-file-input" id="customFile" name="customFile" onchange="ChangeShownImage(event)">
                    <label class="custom-file-label" for="customFile">Product Image</label>
                </div>
            </div>

            <script>
                function ChangeShownImage(event) {
                    document.getElementById("shownImage").src = URL.createObjectURL(event.target.files[0]);
                }
            </script>
            <div class="col-sm-12 col-md-2">
                <img src="@Html.DisplayFor(model => model.product_image)" style="max-height: 200px" id="shownImage" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label">Description</label>
            <div class="col-sm-12 col-md-10">
                @Html.ValidationMessageFor(model => model.long_description, "", new { @class = "text-danger small font-weight-bold" })
                @Html.TextAreaFor(model => model.long_description, new
                {
                        @class = "form-control",
                        placeholder = "Product Description"
                })
            </div>
        </div>
        <div>
            <div class="clearfix">
                <div class="pull-left">
                </div>
                <div class="pull-right">
                    <button class="btn btn-primary btn-sm scroll-click" type="submit"><i class="icon-copy fa fa-pencil" aria-hidden="true"></i> &nbsp;UPDATE PRODUCT</button>
                </div>
            </div>
        </div>
    }
</div>
<!-- Default Basic Forms End -->
